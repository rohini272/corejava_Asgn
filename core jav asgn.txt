
01.	Write a program to print Hello World. Compile and run it using command prompt.
public class Q1 {
    public static void main( String[] args ) {
        System.out.println( "Hello World!" );
        System.exit( 0 ); //success
    }
}
-----------------------------------------------------------------------------------------------------
02.	Write a program to declare a variable named rollNo of integer type. Assign it a value (let say 100) to it and print the following statement roll no = 100 .

class Q2{
public static void main(String args[]){
int rollno = 100;
System.out.println("roll no = " +rollno);

}


}

-----------------------------------------------------------------------------------------------------
03.	Find the result of following expressions. You need to determine the primitive data type of the variable by looking carefully the given expression and initialize variables by any random value.
A. y = x2 + 3x - 7 (print value of y) 
B. y = x++ + ++x (print value of x and y) 
C. z = x++ - --y - --x  +  x++ (print value of x ,y and z)
D. z = x && y || !(x || y)  (print value of z) [ x, y, z are boolean variables ]

class Q3{
public static void main(String arg[]){
int x = 1 ;
int y = x * x + 3 * x - 7;
System.out.println(y) ;
y = x++ + ++x ;
System.out.println(y );
int z =  x++ - --y - --x  +  x++;

System.out.println(z); 

}
}

-----------------------------------------------------------------------------------------------------
04.	Write a program that initializes 2 byte type of variables. Add the values of these variables and store in a byte type of variable. [Note: primitive down casting is required in this program ] .

    

  import java.util.Scanner;

   public class Q4{
        public static void main( String args[]){

   Scanner sc = new Scanner(System.in);

  byte b1 = sc.nextByte();
  byte b2 = sc.nextByte();

 byte b3 = (byte)(b1 + b2);
     System.out.println(b3);
}
}






-----------------------------------------------------------------------------------------------------
05.	Write a program that takes user’s name as command line argument and prints Welcome <entered user name>.

import java.util.Scanner;
class Q5{
	public static void main(String args[]){
	Scanner sc =new Scanner(System.in); //System.in is public static reference type
	System.out.println("Enter ur name");
	String nm =sc.next();
	System.out.println("Welcome "+nm);
}

}

-----------------------------------------------------------------------------------------------------
06.	Write a program that takes radius of a circle as input. Read the entered radius using Scanner class. Then calculate and print the area and circumference of the circle.


import java.util.Scanner;
public class Q6
{
    public static void main(String[] args) 
    {
        int r;
        double pi = 3.14, area;
        Scanner s = new Scanner(System.in);
        System.out.print("Enter radius of circle:");
        r = s.nextInt();
        area = pi * r * r;
        System.out.println("Area of circle:"+area);
    }            
}




-----------------------------------------------------------------------------------------------------
07.	Write a program to calculate sum of 5 subject’s marks & find percentage. Take the obtained marks from user using Scanner class. Output should be in this format [ percentage marks = 99 % ]. Use concatenation operator here.

// Java program to find Total Average and percentage of Five Subjects
import java.util.Scanner;

public class Totalof5subjects1 {
	private static Scanner sc;
	public static void main(String[] args) 
	{
		int english, chemistry, computers, physics, maths; 
	    float total, Percentage, Average;
		sc = new Scanner(System.in);
		
		System.out.print(" Please Enter the Five Subjects Marks : ");
		english = sc.nextInt();	
		chemistry = sc.nextInt();	
		computers = sc.nextInt();	
		physics = sc.nextInt();	
		maths = sc.nextInt();	
		
		total = english + chemistry + computers + physics + maths;
		Average = total / 5;
	    Percentage = (total / 500) * 100;
	    
	    System.out.println(" Total Marks =  " + total);
	    System.out.println(" Average Marks =  " + Average);
	    System.out.println(" Marks Percentage =  " + Percentage);
	}
}


-----------------------------------------------------------------------------------------------------
08.	Write a program to find the simple interest. Take the principle amount, rate of interest and time from user using Scanner class.
//Java program to calculate Simple Interest.
import java.util.*;
 
public class SimpleInterest{
 
    public static void main(String []args)
    {
        double p=0,r=0,t=0,si=0;
         
        //Scanner class to take user input.
        Scanner X = new Scanner(System.in);
         
        System.out.print("Enter Principle : ");
        p = X.nextFloat();
         
        System.out.print("Enter Rate of Interest: ");
        r =  X.nextFloat();
         
        System.out.print("Enter Time in years : ");
        t =  X.nextFloat();
         
        //Formula of simple interest.
        si = (p*r*t)/100;
         
        System.out.print("Simple Interest is :"+si+"\n");
                 
    }
}



-----------------------------------------------------------------------------------------------------
09.	Write a program to read the days (eg. 670 days) as integer value using Scanner class. Now convert the entered days into complete years, months and days and print them.


import java.util.Scanner;
public class Year_Week_Day 
{
    public static void main(String args[])
    {
        int m, year, week, day;
        Scanner s = new Scanner(System.in);
        System.out.print("Enter the number of days:");
        m = s.nextInt();
        year = m / 365;
        m = m % 365;
        System.out.println("No. of years:"+year);
        week = m / 7;
        m = m % 7;
        System.out.println("No. of weeks:"+week);
        day = m;
        System.out.println("No. of days:"+day);
    }
}




-----------------------------------------------------------------------------------------------------
10.	Write a program to convert temperature from Fahrenheit to Celsius. Take Fahrenheit as input using Scanner class. [ formula : C= 5*(f-32)/9 ]

import java.util.Scanner;
public class Exercise1 {

    public static void main(String[] Strings) {

        Scanner input = new Scanner(System.in);

        System.out.print("Input a degree in Fahrenheit: ");
        double fahrenheit = input.nextDouble();

        double  celsius =(( 5 *(fahrenheit - 32.0)) / 9.0);
        System.out.println(fahrenheit + " degree Fahrenheit is equal to " + celsius + " in Celsius");
    }
}


-----------------------------------------------------------------------------------------------------
11.	Write a program to swap two numbers without using third variable.
import java.util.*;  
class Swap   
{  
    public static void main(String a[])   
    {   
        System.out.println("Enter the value of x and y");  
        Scanner sc = new Scanner(System.in);  
        /*Define variables*/  
        int x = sc.nextInt();  
        int y = sc.nextInt();  
        System.out.println("before swapping numbers: "+x +" "+ y);  
       /*Swapping*/  
        x = x + y;   
        y = x - y;   
        x = x - y;   
        System.out.println("After swapping: "+x +"  " + y);   
    }   
}  





-----------------------------------------------------------------------------------------------------
12.	In a company an employee is paid as under: If his basic salary is less than Rs. 10000, then HRA = 10% of basic salary and DA = 90% of basic salary. 
If his salary is either equal to or above Rs. 10000, then HRA = Rs. 2000 and DA = 98% of basic salary. 
If the employee's salary is input by the user write a program to find his gross salary. [ formula : GS= Basic + DA + HRA ]

import java.util.Scanner;

class employeesalary
{
 public static void main(String args[]) 
 {
  float basic_salary,da,hra,da1,hra1,GrossPayment;

  Scanner scan=new Scanner(System.in);

  System.out.println("Enter Basic Salary Of Employee: ");
  basic_salary=scan.nextFloat();

  System.out.println("Enter Basic DA Of Employee: "); 
  da1=scan.nextFloat();
 
  System.out.println("Enter Basic HRA Of Employee: ");
  hra1=scan.nextFloat();

  da = (da1 * basic_salary) / 100;
  hra = (hra1 * basic_salary) / 100;

  GrossPayment = basic_salary + da + hra;

  System.out.println("Gross Salary Of Employee: "+GrossPayment);
  }
}



-----------------------------------------------------------------------------------------------------
13.	Program to find greatest in 3 numbers. [ once using if else statement and then using ternary operator ( logical operator) ]  


using if else statement :
public class JavaExample{

  public static void main(String[] args) {

      int num1 = 10, num2 = 20, num3 = 7;

      if( num1 >= num2 && num1 >= num3)
          System.out.println(num1+" is the largest Number");

      else if (num2 >= num1 && num2 >= num3)
          System.out.println(num2+" is the largest Number");

      else
          System.out.println(num3+" is the largest Number");
  }
}




using ternary operator

import java.util.Scanner;
public class JavaExample 
{
    public static void main(String[] args) 
    {
        int num1, num2, num3, result, temp;
        /* Scanner is used for getting user input. 
         * The nextInt() method of scanner reads the
         * integer entered by user.
         */
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter First Number:");
        num1 = scanner.nextInt();
        System.out.println("Enter Second Number:");
        num2 = scanner.nextInt();
        System.out.println("Enter Third Number:");
        num3 = scanner.nextInt();
        scanner.close();
       
        
        /* In first step we are comparing only num1 and
         * num2 and storing the largest number into the
         * temp variable and then comparing the temp and
         * num3 to get final result.
         */
        temp = num1>num2 ? num1:num2;
        result = num3>temp ? num3:temp;
        System.out.println("Largest Number is:"+result);
    }
}



-----------------------------------------------------------------------------------------------------
14.	Program to check that entered year is a leap year or not.

import java.util.Scanner;

public class LeapYearUsingIf {
	private static Scanner sc;

	public static void main(String[] args) {
		int year;
		sc = new Scanner(System.in);
		
		System.out.println("\n Please Enter any year you wish: ");
		year = sc.nextInt();
		
		if (( year%400 == 0)|| (( year%4 == 0 ) &&( year%100 != 0))) {
			System.out.format("\n %d is a Leap Year. \n", year);
		}
		else {
			System.out.format("\n %d is NOT a Leap Year. \n", year);
		}
	}
}
-----------------------------------------------------------------------------------------------------

15.	Accept person’s gender (character m for male and f for female), age (integer), as input and then check whether person is eligible for marriage or not.
class Ideone
{
	public static void main (String[] args) {
		
		Scanner sc = new Scanner (System.in);
		
		// taking input from user 
		
		System.out.println("Enter age");
		int age = sc.nextInt();
		
		System.out.println("Enter sex: M/F");
		int sex = sc.next().charAt(0);
		
		System.out.println("Are you married? Y/N");
		int married = sc.next().charAt(0);
		
		// checking if user is female
		if(sex == 'F') {
			System.out.println("You will work only in urban areas");
		}
		
		// checking if user is male
		if(sex == 'M') {
			if((age >= 20) && (age < 40)) {
				System.out.println("You may work anywhere");
			}
			else if((age >= 40) && (age < 60)) {
				System.out.println("You will work only in urban areas");
			}
			else {
				System.out.println("ERROR");
			}
		}
	}
}




-----------------------------------------------------------------------------------------------------
16.	Write a program to print table of any entered number using loop.

public class MultiplicationTable {

    public static void main(String[] args) {

        int num = 5;
        for(int i = 1; i <= 10; ++i)
        {
            System.out.printf("%d * %d = %d \n", num, i, num * i);
        }
    }
}


using while loop
public class MultiplicationTable {

    public static void main(String[] args) {

        int num = 9, i = 1;
        while(i <= 10)
        {
            System.out.printf("%d * %d = %d \n", num, i, num * i);
            i++;
        }
    }
}



-----------------------------------------------------------------------------------------------------
17.	Write a program to reverse a given number.
public class ReverseNumber {

    public static void main(String[] args) {

        int num = 1234, reversed = 0;

        while(num != 0) {
            int digit = num % 10;
            reversed = reversed * 10 + digit;
            num /= 10;
        }

        System.out.println("Reversed Number: " + reversed);
    }
}
-----------------------------------------------------------------------------------------------------
18.	Program to check whether number is prime or not.
public class Main {

    public static void main(String[] args) {

        int num = 29;
        boolean flag = false;
        for(int i = 2; i <= num/2; ++i)
        {
            // condition for nonprime number
            if(num % i == 0)
            {
                flag = true;
                break;
            }
        }

        if (!flag)
            System.out.println(num + " is a prime number.");
        else
            System.out.println(num + " is not a prime number.");
    }
}
-----------------------------------------------------------------------------------------------------
19.	Calculate  series : 12+22+32+42+.........+n2
import java.util.Scanner;

public class Main {

    
    static void println(String string) {
        System.out.println(string);
    }

    static void print(String string) {
        System.out.print(string);
    }

    
    static void printSeries(int n, int total) {
        int i = 1;
        for (i = 1; i < n; i++) {
            print(i + "^2 +");
        }
        print(i + "^2 = " + total);
    }


    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        //get value of n from user
        println("Enter value of 'n' : ");
        int n = scanner.nextInt();

        //calculate the sum of the series
        int sum = (n * (n + 1) * (2 * n + 1 )) / 6;

        //print the series
        printSeries(n,sum);

    }
}



-----------------------------------------------------------------------------------------------------
20.	Print all prime numbers between two given numbers. [ break continue ]


import java.util.Scanner; 

// Java program to find the prime numbers 
// between a given interval 
public class prime { 

	// driver code 
	public static void main(String[] args) 
	{ 
		Scanner sc = new Scanner(System.in); 
		// Declare the variables 
		int a, b, i, j, flag; 

		// Ask user to enter lower value of interval 
		System.out.printf("Enter lower bound of the interval: "); 
		a = sc.nextInt(); // Take input 

		// Ask user to enter upper value of interval 
		System.out.printf("\nEnter upper bound of the interval: "); 
		b = sc.nextInt(); // Take input 

		// Print display message 
		System.out.printf("\nPrime numbers between %d and %d are: ", a, b); 

		// Traverse each number in the interval 
		// with the help of for loop 
		for (i = a; i <= b; i++) { 

			// Skip 0 and 1 as they are 
			// niether prime nor composite 
			if (i == 1 || i == 0) 
				continue; 

			// flag variable to tell 
			// if i is prime or not 
			flag = 1; 

			for (j = 2; j <= i / 2; ++j) { 
				if (i % j == 0) { 
					flag = 0; 
					break; 
				} 
			} 

			// flag = 1 means i is prime 
			// and flag = 0 means i is not prime 
			if (flag == 1) 
				System.out.println(i); 
		} 
	} 
} 


-----------------------------------------------------------------------------------------------------
21.	Program to show sum and average of 10 element array. Accept array elements from user. 
import java.util.Scanner;
public class Sum_Average
{
    public static void main(String[] args) 
    {
        int n, sum = 0;
        float average;
        Scanner s = new Scanner(System.in);
        System.out.print("Enter no. of elements you want in array:");
        n = s.nextInt();
        int a[] = new int[n];
        System.out.println("Enter all the elements:");
        for(int i = 0; i < n ; i++)
        {
            a[i] = s.nextInt();
            sum = sum + a[i];
        }
        System.out.println("Sum:"+sum);
        average = (float)sum / n;
        System.out.println("Average:"+average);
    }



-----------------------------------------------------------------------------------------------------
22.	Sort a ten element array in descending order.

import java.util.Scanner;
public class Descending_Order
{
    public static void main(String[] args) 
    {
        int n, temp;
        Scanner s = new Scanner(System.in);
        System.out.print("Enter no. of elements you want in array:");
        n = s.nextInt();
        int a[] = new int[n];
        System.out.println("Enter all the elements:");
        for (int i = 0; i < n; i++) 
        {
            a[i] = s.nextInt();
        }
        for (int i = 0; i < n; i++) 
        {
            for (int j = i + 1; j < n; j++) 
            {
                if (a[i] < a[j]) 
                {
                    temp = a[i];
                    a[i] = a[j];
                    a[j] = temp;
                }
            }
        }
        System.out.print("Descending Order:");
        for (int i = 0; i < n - 1; i++) 
        {
            System.out.print(a[i] + ",");
        }
        System.out.print(a[n - 1]);
    }
}


-----------------------------------------------------------------------------------------------------
23.	Write a program to reverse the array elements.


public class ReverseArray {  
    public static void main(String[] args) {  
        //Initialize array  
        int [] arr = new int [] {1, 2, 3, 4, 5};  
        System.out.println("Original array: ");  
        for (int i = 0; i < arr.length; i++) {  
            System.out.print(arr[i] + " ");  
        }  
        System.out.println();  
        System.out.println("Array in reverse order: ");  
        //Loop through the array in reverse order  
        for (int i = arr.length-1; i >= 0; i--) {  
            System.out.print(arr[i] + " ");  
        }  
    }  
}  

-----------------------------------------------------------------------------------------------------
24.	Write a program to search an element in the array.


import java.util.*;
 
class arr2
{  
 public static void main(String args[])
 {
 Scanner sc = new Scanner(System.in);
 
     int i,n,search,flag=0;
 System.out.println("Enter the number of elements:") ;
 n = sc.nextInt();
 int[] a = new int[n];
 
     System.out.println("Enter the elements") ;
     for(i=0;i<n;i++)
     {
         a[i] = sc.nextInt();
     }
 
 System.out.println("Enter the element to be seached");
 search = sc.nextInt();
    
     /*Perform search operation*/
     for(i=0;i<n;i++)
     {
         if(a[i]==search)
         {
             System.out.println("Element "+search+" found at "+i+" position");
             flag=1;
             break;
         }
     }
     if(flag==0)
     {
         System.out.println("Element "+search+" not found");
     }
 }
}


-----------------------------------------------------------------------------------------------------
25.	Write the program to find the sum of even elements and sum of odd elements present in the array of integer type.
// Java program to find out 
// Sum of elements at even and 
// odd index positions separately 
import java.io.*; 

class EvenOddSum { 
	public static void main(String args[]) 
	{ 
		int arr[] = { 1, 2, 3, 4, 5, 6 }; 
		int even = 0, odd = 0; 

		// Loop to find even, odd sum 
		for (int i = 0; i < arr.length; i++) { 
			if (i % 2 == 0) 
				even += arr[i]; 
			else
				odd += arr[i]; 
		} 

		System.out.println("Even index positions sum: " + even); 
		System.out.println("Odd index positions sum: " + odd); 
	} 
} 


-----------------------------------------------------------------------------------------------------
26.	Create an array of 17 elements in 5 rows.  And calculate sum of all elements.
import java.util.Arrays;
import java.util.Scanner;
public class SumOfElementsOfAnArray {
   public static void main(String args[]){
      System.out.println("Enter the required size of the array :: ");
      Scanner s = new Scanner(System.in);
      int size = s.nextInt();
      int myArray[] = new int [size];
      int sum = 0;
      System.out.println("Enter the elements of the array one by one ");

      for(int i=0; i<size; i++){
         myArray[i] = s.nextInt();
         sum = sum + myArray[i];
      }
      System.out.println("Elements of the array are: "+Arrays.toString(myArray));
      System.out.println("Sum of the elements of the array ::"+sum);
   }
}
-----------------------------------------------------------------------------------------------------

27.	Write a program to fine the smallest and greatest number present in the array of integer type.

public class FindBiggestSmallestNumber {
 
        public static void main(String[] args) {
                int numbers[] = new int[]{33,53,73,94,22,45,23,87,13,63};
                int smallest = numbers[0];
                int biggest = numbers[0];
               
                for(int i=1; i< numbers.length; i++)
                {
                        if(numbers[i] > biggest)
                                biggest = numbers[i];
                        else if (numbers[i] < smallest)
                                smallest = numbers[i];
                       
                }
               
                System.out.println("Largest Number is : " + biggest);
                System.out.println("Smallest Number is : " + smallest);
        }
}

-----------------------------------------------------------------------------------------------------
28.	Initialize one String type of array and print the elements using for each loop.
	public class PrintArrayExample2  
{  
public static void main(String args[])   
{  
// declaration and instantiation of an array   
String[] city = new String[4];  
//initializing elements   
city[0] = "Delhi";  
city[1] = "Jaipur";  
city[2] = "Gujarat";  
city[3] = "Mumbai";  
//traversing over array using for-each loop   
for (String str : city)   
{  
System.out.println(str);  
}  
}  
} 




-----------------------------------------------------------------------------------------------------
29.	Write a program to print the total number of one-D arrays in a two-D array and the number of elements in every one-D array present in the two-D arrays.
 import java.util.Scanner;
class onedarr{
    public static void main(String args[]){
        Scanner scanner = new Scanner(System.in);
        int t, e; 
        System.out.print("Enter num of rows : ");
        t = scanner.nextInt(); 
        System.out.print("Enter num of col : ");
        e = scanner.nextInt(); 
        int counter=0;
        int[][] arr = new int[t][e]; 

        for (int i = 0; i < arr.length; i++) { 
            counter++;
            //e = scanner.nextInt(); 
            //arr[i] = new int[e]; 
            System.out.println("Enter elements of "+i+" row ");

            for (int j = 0; j < arr[i].length; j++) { 
                System.out.print("Enter element ");

                arr[i][j] = scanner.nextInt(); 
            } 
        } 

        System.out.println("Number of 1D array in 2D : "+counter);
        System.out.println("Array elements are as follows : ");


        for(int i=0; i < arr.length; i++)
        {
            for(int j=0; j<arr[i].length; j++)
            {
                System.out.print(arr[i][j]+" ");
            } 
            System.out.println("");
        }


    }
}


-----------------------------------------------------------------------------------------------------
30.	Create an integer type 2-D array of size [3X3]. Take the elements from the user and then calculate the sum of the elements present in the diagonal.
import java.util.*;

class arr16
{  
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		
	        int i,j,row,col,sum=0;
		System.out.println("Enter the number of rows:");
		row = sc.nextInt();
		System.out.println("Enter the number of columns:");
		col = sc.nextInt();

		int[][] mat = new int[row][col];
 
    		System.out.println("Enter the elements of the matrix") ;
    		for(i=0;i<row;i++)
    		{ 
	    		for(j=0;j<col;j++)
	    		{ 
	        		mat[i][j] = sc.nextInt();
    			}
		}
		
    		System.out.println("The elements of the matrix") ;
    		for(i=0;i<row;i++)
    		{ 
	    		for(j=0;j<col;j++)
	    		{ 
	       	 		System.out.print(mat[i][j]+"\t");
    			}
      	 		System.out.println("");
		}

    		for(i=0;i<row;i++)
    		{ 
	    		for(j=0;j<col;j++)
	    		{ 
				if(i==j)	//this condition checks for diagonal
				{
					sum = sum + mat[i][j];
				}
    			}
		}

    		System.out.printf("SUM of DIAGONAL elements of the matrix = "+sum) ;
 	}	
}



-----------------------------------------------------------------------------------------------------


31.	Create a class Student with 2 data members rno and name. Create one method setData() that takes roll number and student name as parameter and stores them in data members rno and name. Create one more method showData() to print the data member values. Create another class ( main class) StudentDemo that creates Student class object and calls setData() and showData() methods.

  class Student{
    public int rno;
   public  String name;
       void setData(final int roln, final String sname) {
           rno = roln;
           name = sname;
       }
       void showData() {
           System.out.println(rno + " " + name+" ");
       }
   }
   class StudentDemo {
       public static void main(final String args[]) {
           Studen e = new Student();
           e.setData(1,"Rohini");
           e.showData();
       }
   }

---------------------------------------------------------------------------------------------------------------

32.	Modify the above program (no. 30) to count the no of Student objects created. [ In this program static variable is required ]

class program {
    public int rno;
    public String name;

    static public int countObj = 0;

    NewStudent() {
        countObj++;

    }

    void setData(final int roln, final String sname) {
        rno = roln;
        name = sname;
    }

    void showData() {
        System.out.println("Rollno: " + rno + " Name: " + name);

    }

    static void getObjCount() {
        System.out.println("Object no: " + countObj);

    }
}

public class Q32 {

    public static void main(String[] args) {
        program p1 = new NewStudent();
        p1.setData(1, "Rohini");
        p1.showData();
        program.getObj();
        program e2 = new NewStudent();
        program e3 = new NewStudent();
        program e4 = new NewStudent();
        program.getObjCount();

    }
}



------------------------------------------------------------------------------------------------------------------------------------------------------------------
33.	Write a program to demonstrate functionalities of this keyword in java. 
class Employee{
	private int empId;	
	private String empName;
	Employee()
	{
	 
          this(111,"rita");	
          this.empId=114;
	  this.empName="rita";
          System.out.println("1 para  "+this);
	}
          	Employee(int empId,String empName)
	{
		 this.empId=empId;
	 	 this.empName=empName;	
                           	System.out.println("2 para  "+this);
	}
           	void show(){	
	 	System.out.println("Employee id: "+empId+" 	Employee Name "+empName);
	}
}

class Q33
{
   public static void main(String args[]){
   Employee e=new Employee();
   e.show();
    /*Employee e1=new Employee(101,"Harry");
   e1.show();*/
}
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
34.	Create a class Circle that has two data members, one to store the radius and another to store area and three methods first init() method to input radius from user, second calculateArea() method to calculate area of circle and third display() method to display values of radius and area. Create class CircleDemo ( main class) that creates the Circle object and calls init(), calculateArea() and display() methods.
class Circle{
	private int radius;	
	private double area;
                     private double  PI;
	Circle()
	{
	  this.radius=4;
                       this.PI=3.14;
                      System.out.println("0 para  "+this);
	}
          	Circle(int radius)
	{
		 this.radius=radius;
    		this.PI=3.14;
	 	 System.out.println("1 para  "+this);
	}
	void init(int radius)
                      {
                        this.radius=radius;
                        this.PI=3.14;
	}
	void calculateArea()
                      {
                         this.area=radius*PI*radius;
                      }
           	void display(){	
	 	System.out.println("Area of circle is: "+area);
	}
}

class Q34
{
   public static void main(String args[]){
   Circle c=new Circle(3);
   //c.init(5);
   c.calculateArea();
   c.display();
}
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
35.	Create a class MathOperation that has four static methods. add() method that takes two integer numbers as parameter and returns the sum of the numbers. subtract() method that takes two integer numbers as parameter and returns the difference of the numbers. multiply() method that takes two integer numbers as parameter and returns the product. power() method that takes two integer numbers as parameter and returns the power of first number to second number. Create another class Demo (main class) that takes the two numbers from the user and calls all four methods of MathOperation class by providing entered numbers and prints the return values of every method.
import java.util.Scanner;
class MathOperations{
                    static int add(int a,int b)
                      {
                          return a+b;
	}
	static int sub(int a,int b)
                      {
                          return a-b;
	}
	static int multiply(int a,int b)
                      {
                          return a*b;
	}
	static int power(int a,int b)
                      {
                          int result=1;
                          while(b!=0)
	     {
                              result*=a;
                              --b;
	      }
                         return result;
	}
	static void show(int result)
                      {
                        System.out.println("Addition of number is "+result); 
                      }
           	
}

class Q35
{
   public static void main(String args[]){
   Scanner sc=new Scanner(System.in);
   System.out.println("Enter First Number");
   int a=sc.nextInt();
   System.out.println("Enter Second Number");
   int b=sc.nextInt();
   int result=0;
   result= MathOperations.add(a,b);
   MathOperations.show(result);
   result= MathOperations.sub(a,b);
   MathOperations.show(result);
   result= MathOperations.multiply(a,b);
   MathOperations.show(result);
    result= MathOperations.power(a,b);
   MathOperations.show(result);
}
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
36.	Create a class MathOperation containing overloaded methods ‘multiply’ to calculate multiplication of following arguments. 
a.	 two integers 
b.	 three floats 
c.	 all elements of array 
d.	one double and one integer 
import java.util.Scanner;
class MathOperations{
                    void multiply(int a,int b)
                     {
 	  int result=a+b;
	  System.out.println("Addition of two interer value: "+result);
	}
	void multiply(float a,float b,float c)
                     {
 	  float result=a+b+c;
	  System.out.println("Addition of three float value: "+result);
	}
                     void multiply(double a,int b)
                     {
 	  double result=a+b;
	  System.out.println("Addition of three float value: "+result);
	}

}

class Q36
{
   public static void main(String args[]){
  // Scanner sc=new Scanner(System.in);
   MathOperations mo=new MathOperations();
   mo.multiply(2,2);
   mo.multiply(2.1f,2.5f,7.9f);
   mo.multiply(2.888,2);
   
}
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
37.	Create a class Person with properties (name and age) with following features. 
a.	Default age of person should be 18.
b.	A person object can be initialized with name and age.
c.	Method to display name and age of person
Create another class PersonDemo ( main class ) that demonstrates the functionalities of Person class by creating Person object and calling methods.
import java.util.Scanner;
class Person{
                    private String name;
                    private int age;
                    Person(String name)
                    { 
	 this.name=name;
                      this.age=18;
                     }
                     Person(String name,int age)
	{
                           this.name=name;
                           this.age=age;
	}
 	void display()
	{
                             System.out.println("Name: "+name+" Age "+age);
	}
}

class Q37
{
   public static void main(String args[]){
   Scanner sc=new Scanner(System.in);
    System.out.println("Enter name of person: ");
   String name=sc.next();
   Person p=new Person(name);
   p.display();
System.out.println("Enter name and age of person: ");
  String name1=sc.next();
  int age1=sc.nextInt();
   Person p1=new Person(name1,age1);
   p1.display();
   
}
}

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
38.	Create a class Employee with three data members (empNo, salary and totalSalary) and following features.
a.	Only parameterized constructor. [Do not overload the constructor]
b.	totalSalary always represents salary total of all the employees created.
c.	empNo should be auto incremented.
d.	display total employees and totalSalary using a method.
Create another class EmployeeDemo (main class) that creates some Employee objects and calls Employee method to display no. of employees and total of their salaries.
import java.util.Scanner;
class Employee{
	private static int count=0;
	private static int empNo;
	private double salary;
	private static double totalsalary;
	
	Employee()
	{

	}
	Employee(double salary){
		this.empNo=++count;
		this.salary=salary;
		this.totalsalary+=salary;
	}

	void totalsalary()
	{
                        	System.out.println("Total salary Of the employeeis: "+totalsalary);
	}	

	void totalemployees()
	{
		System.out.println("Total Employess : "+empNo);
	}
	}

class Q38
{
   public static void main(String args[]){
   Scanner sc=new Scanner(System.in);
  for(int i=0;i<=3;i++)
{
    System.out.println("Enter Salary of employees ");
   double salary=sc.nextDouble();
  Employee e1=new Employee(salary);
  } 
  Employee e2=new Employee();
  e2.totalsalary();
  e2.totalemployees();
}
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

39.	Create class Product with three data members (pid, price, quantity) and parameterized constructor that takes values for all three data members.  
Create a main method in different class (say ProductDemo) and perform following task:
a. Accept information for five Product objects from user and store objects in an array
b. Find pid of product with highest price. 
c. Create a static method (with array of product’s object as argument) in Product class to calculate and return total amount spent on all products. ( amount spent on single product = price of product * quantity of product )
import java.util.Scanner;
class Product{
	private int pid;
	private double price;
	private int quantity;

	Product(int pid,double price,int quantity){
		this.pid=pid;
		this.price=price;
		this.quantity=quantity;
	}
	void display(){
		
		System.out.println("Pid: "+pid+"  Price "+price+"  Quantity "+quantity);
	}
	

	double getprice(){
 		return(this.price);
	}
	int getppid(){
 		return(this.pid);
	}
	static double totalAmount(Product p[]){
		double total=0;
		for(int i=0;i<p.length;i++){
			total+=((p[i].price)*(p[i].quantity));                                  		
		}
		return total;
	}


}
class Q039{
public static void main(String args[]){
 	Product p[]=new Product[3];
   	int pid;
	int quantity;
 	double price;	
	Scanner sc=new Scanner(System.in);
	for(int i=0;i<p.length;i++){
		System.out.println("Enter Pid, Price, Quantity: ");
                              	pid=sc.nextInt();
		price=sc.nextDouble();
		quantity=sc.nextInt();
		p[i]=new Product(pid,price,quantity);
	}

	System.out.println("Product Details: ");
                      for(Product a:p){
		a.display();
	}
                    double temp=0;
                     int ppid=0;
                 	for(int i=0;i<p.length;i++){
		temp=p[i].getprice();
		ppid=p[i].getppid();
		for(int j=0;j<p.length;j++){
		 if(temp>p[i].getprice()){
			temp=p[i].getprice();
			ppid=p[i].getppid();
		}
		}
	}
	System.out.println("Maximum Price of prodoct and Pid is: 	"+ppid+"  "+temp);
	
	System.out.println("Total amount of the products: "+Product.totalAmount(p));
	
}}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
40.	Create a class Student having data members name, roll no., age and score. Write a program to accept 10 records of student and store them in an array. And then arrange the student records based on the score group [0-50], [50-65], [65-80], [80-100].
import java.util.Scanner;
class Student{
	private String name;
	private int rollno;
	private int age;
	private int score;

	Student(String name,int age,int rollno,int score){
		this.name=name;
		this.rollno=rollno;
		this.age=age;
		this.score=score;
	}

	int getscore(){
		return score;
	}
	void display()
	{
		System.out.println("Name:"+name+" Age:"+age+" Roll No:"+rollno+" Score:"+score);
	}

}


class Q40{
public static void main(String args[]){
 	Scanner sc=new Scanner(System.in);
	Student s[]=new Student[3];
                     String name;
	int age,rollno,score;
	System.out.println("Enter Name, Age, Roll No, 	Score: ");
	for(int i=0;i<s.length;i++){
	name=sc.next();
	age=sc.nextInt();
	rollno=sc.nextInt();
	score=sc.nextInt();	
                  	s[i]=new Student(name,age,rollno,score);
	}
	for(Student a:s){
		a.display();
	}
	System.out.println("============================================");
                      System.out.println("Students Record Whose Score Between {0-50}");
	for(int i=0;i<s.length;i++){
		if(s[i].getscore() > 0 && s[i].getscore()<=50){
			s[i].display();
		}
	}
	System.out.println("============================================");
   	System.out.println("Students Record Whose Score Between {50-65}");
	for(int i=0;i<s.length;i++){
		if(s[i].getscore() > 50 && s[i].getscore()<=65){
			s[i].display();
		}
	}
	System.out.println("============================================");
	System.out.println("Students Record Whose Score Between {65-80}");
	for(int i=0;i<s.length;i++){
		if(s[i].getscore() > 65 && s[i].getscore()<=80){
			s[i].display();
		}
	}

	System.out.println("============================================");
                      System.out.println("Students Record Whose Score Between {80-100}");
	for(int i=0;i<s.length;i++){
		if(s[i].getscore() > 80 && s[i].getscore()<=100){
			s[i].display();
		}
	}
	
}}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

41.	Write a program to demonstrate this() construct functionality.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
42.	Create a class Tile to store the edge length of a square tile, and create another class Floor to store length and width of a rectangular floor. Add method totalTiles(Tile t) in Floor class with Tile as argument to calculate the whole number of tiles needed to cover the floor completely.
import java.util.Scanner;
class Tile{
	int edge;
	 double area;
	Tile(int edge){
		this.edge=edge;
		this.area=edge*edge;
	}
}

class Floor{
	int l;
	 int w;
	 double area; 
	Floor(int l,int w){
		this.l=l;
		this.w=w;
		this.area=l*w;
	}
 	double totaltiles(Tile t)
	{
                           return (this.area/t.area);
	}
}

class Q42{
public static void main(String args[]){
 	Scanner sc=new Scanner(System.in);
	Tile t=new Tile(10);
	Floor f=new Floor(100,200);
                     double tt=f.totaltiles(t);
	System.out.println("Total Tiles Required: "+tt);
}}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
43.	Create a class OneBHK with instance variables roomArea, hallArea and price. Then create default constructor that initializes instance variables with some values and a parameterized constructor that takes values for all instance variables and stores them in instance variables. Now create a method named show()  to print OneBHK’s instance variable values.
Create another class TwoBHK which has (inherites) all the properties and behaviors of OneBHK and a new instance variable room2Area. Then create default constructor to initialize all 4 instance variables and a parameterized constructor to take the values for initialization of all instance variables. Override show() method to print all data member information.
Write main method in another class (Say Demo) and store three TwoBHK flat’s information and print information using show method. Also print total amount of all flats. 

import java.util.Scanner;
class OneBHK{
	double roomArea;
	double hallArea;
	double price;

	OneBHK(double roomArea,double hallArea,double price){
		this.roomArea=roomArea;
		this.hallArea=hallArea;
		this.price=price;
	}

	void show(){
		System.out.println("Room Area 1: "+roomArea+" Hall 	Area:"+hallArea+" Price:"+price);
	}
}

class TwoBHK extends OneBHK{
	double roomArea2;
	TwoBHK(double roomArea,double hallArea,double price,double roomArea2){
                                          super(roomArea, hallArea, price);
		this.roomArea2=roomArea2;
		
	}

	void show(){
		super.show();
		System.out.println("Room Area 2: "+roomArea2);
	}
}

class Q43{
public static void main(String args[]){
 	Scanner sc=new Scanner(System.in);
	double total = 0.00;
	TwoBHK []tb=new TwoBHK[3];
	for(int i=0;i<tb.length;i++){
		System.out.println("Enter Room1 area:  ");
		double ra1=sc.nextDouble();
		System.out.println("Enter Hall area:  ");
		double ha=sc.nextDouble();
		System.out.println("Enter Price:  ");
		double price=sc.nextDouble();
		 total += price;
		System.out.println("Enter Room2 area:  ");	
		double ra2=sc.nextDouble();
		
                TwoBHK tb1=new TwoBHK(ra1,ha,price,ra2);
		tb[i]=tb1;
                                           
	}
	for(TwoBHK a: tb){
		a.show();
	}
	System.out.println("Total Prize of the flats: "+total);
}}



------------------------------------------------------------------------------------------------------------------------------------------------------------------------
44.	Create three classes
-	Faculty with two data members facultyId and salary and two methods, one intput() method for accepting facultyId as input and another printSalary() to print salary.
-	FullTimeFaculty that inherits class Faculty with two data members’ basicSalary and allowance. Override input() method in this class that calls super class inut() method and accepts basicSalary and allowance as input. Salary should not be accepted as input but should be calculated using formula (basicSalary + allowance)
-	PartTimeFaculty that inherits class Faculty with two data members’ workingHours, ratePerHour. Override input() method in this class that calls super class inut() method and accepts workingHours and ratePerHour as input. Salary should not be accepted as input but should be calculated using formula ( workingHour * ratePerHour )
import java.util.Scanner;
class Faculty{
	int facultyId;
	double salary;
	void input(int facultyId,double salary){
		this.facultyId=facultyId;
		this.salary=salary;
		}
	void printSalary(){
		System.out.println("FacultyId:"+facultyId+" Salary:"+salary);
	}
}
class FullTimeFaculty extends Faculty{
	double basicSalary;
	double allowance;

	void input(int facultyId,double basicSalary,double allowance){
	super.input(facultyId,basicSalary+allowance);
	 this.basicSalary=basicSalary;
	 this.allowance=allowance;
	}
	void printSalary(){
		//System.out.println("FacultyId:"+facultyId+" Salary:"+salary);
		super.printSalary();
		System.out.println("BasicSalary"+basicSalary+" Allowance:"+allowance);
	System.out.println(" ");
	}
}
class PartTimeFaculty extends Faculty{
	double workingHour;
	double ratePerHour;

	void input(int facultyId,double workingHour,double ratePerHour){
	super.input(facultyId,workingHour * ratePerHour);
		this.workingHour=workingHour;
		this.ratePerHour=ratePerHour;
	}
	void printSalary(){
		//System.out.println("FacultyId:"+facultyId+" Salary:"+salary);
		super.printSalary();
		System.out.println("workingHour"+workingHour+" ratePerHour:"+ratePerHour);
	                     System.out.println(" ");
	}
}

class Q44{
	public static void main(String args[]){
	Scanner sc=new Scanner(System.in);
	FullTimeFaculty ft1[]=new FullTimeFaculty[2];
	PartTimeFaculty pt1[]=new PartTimeFaculty[2];
	System.out.println("======Enter Full Time Employee details:=======");
	for(int i=0;i<ft1.length;i++){
	System.out.println("Enter Faculty Id:");
	int id=sc.nextInt();
	System.out.println("Enter Basic Salary:");
	double bSalary=sc.nextDouble();
	System.out.println("Enter Allowance:");
	double allowance=sc.nextDouble();
	FullTimeFaculty ft=new FullTimeFaculty();
	ft.input(id,bSalary,allowance);
                     ft1[i]=ft;
	
                     }
                     System.out.println("======Enter Part Time Employee details:=======");
	for(int i=0;i<pt1.length;i++){
	System.out.println("Enter Faculty Id:");
	int id1=sc.nextInt();
	System.out.println("Enter Working Hour:");
	double wh=sc.nextDouble();
	System.out.println("Enter Rate Per Hour:");
	double rh=sc.nextDouble();
	PartTimeFaculty pt=new PartTimeFaculty();
	pt.input(id1,wh,rh);
                     pt1[i]=pt;
	
                     }
	System.out.println("  ");
	System.out.println("=======================================================");
	System.out.println("Records of the full time Employee: ");
 	System.out.println("=======================================================");
	for(FullTimeFaculty f: ft1){
	  f.printSalary();
	}

	System.out.println("=======================================================");
                      //System.out.println("  ");
                      System.out.println("Records of the Part time Employee: ");
 	System.out.println("=======================================================");
	for(PartTimeFaculty p: pt1){
	  p.printSalary();
	}
	
	}
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
45.	Create a class Student with two members : rollno and percentage. Create default and parameterized constructors. Create method show() to display information. Create another class CollegeStudent inherits Student class. Add a new member semester to it. Create default and parameterized constructors. Also override show() method that calls super class show() method and displays semester. Create another class SchoolStudent inherits Student class. Add a new member className(eg 12th ,10th etc.) to it. Create default and parameterized constructors. Also override show() method that calls super class show() method and displays className. Create a class( say Demo) with main method that carries out the operation of the project : -- has array to store objects of any class(Student,  CollegeStudent or SchoolStudent) --create two CollegeStudent  and three SchoolStudent objects and store them inside the array -- display all records from the array -- search record on the basic of rollno and check given rollno is of SchoolStudent or of CollegeStudent. --count how many students are having A grade, if for A grade percentage >75. 
import java.util.Scanner;
class Student{
	int rollNo;
	double percentage;
                     Student(){}
	Student(int rollNo,double percentage){
	this.rollNo=rollNo;
	this.percentage=percentage;
	}
	void show(){
	System.out.print("Roll No:"+rollNo+" Percentage:"+percentage+"%");
	}
	int getrollno(){
		return rollNo;
	}
	double getper(){
		return percentage;
	}
	
}
class CollegeStudent extends Student{
	double  semester;
	CollegeStudent(){
	}
	CollegeStudent(int rollNo,double percentage,double  semester){
	super(rollNo,percentage);
	this.semester=semester;
	}
	void show(){
	super.show();
	System.out.println(" Semester"+semester);
	}
}
class SchoolStudent extends Student{
	double className;
	SchoolStudent(int rollNo,double percentage,double  semester){
	super(rollNo,percentage);
	this.className=className;
	}
 	void show(){
	super.show();
	System.out.println(" className"+className);
	}
	
}
class Q045{
public static void main(String args[]){
	Scanner sc=new Scanner(System.in);
	Student s[]={new CollegeStudent(1,90,4),new CollegeStudent(3,70,3),new CollegeStudent	(4,60,8),new SchoolStudent(2,80,12),new SchoolStudent(5,65,11) };
	
	for(Student ss: s){
	ss.show();
	}
	int searchno=2;
	for(Student ss:s){
	if(ss.getrollno()==searchno){
                             if(ss instanceof CollegeStudent){
		System.out.println("this is the roll no of college student");
		}
	       else if(ss instanceof SchoolStudent){
	
		System.out.println("this is the roll no of school student");
	
	}
	ss.show();
	}
	}
	int count=0;
	for(Student ss:s){
	if(ss.getper()>=75){
	count++;
	System.out.println("Grade A");
	ss.show();
	}
	}
	System.out.println("Total Number of grade a students are: "+count);
}
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------



46.	Create a program to demonstrate the use of instanceof operator or secure reference down casting.
import java.lang.*;

class Shape {

    int length;
    int height;

    void show() {
        System.out.println("Length: " + length + " height: " + height);
    }

    Shape() {
    }

    Shape(int length, int height) {
        this.length = length;
        this.height = height;
    }

    void Area() {
    };

}

class Rectangle extends Shape {

    void Area() {
        super.show();
        System.out.println("Area:  " + (length * height));
    }

    void diagonal() {
        double a = Math.pow(length, 2) + Math.pow(height, 2);
        System.out.println(" Diagonal is: " + (Math.sqrt(a)));
    }

    Rectangle() {
    }

    Rectangle(int length, int height) {
        super(length, height);
    }

}

class Triangle extends Shape {
    void Area() {
        super.show();
        System.out.println("Area:  " + (0.5 * length * height));
    }

    Triangle() {
    }

    Triangle(int length, int height) {
        super(length, height);
    }
}

public class Q46 {
    public static void main(String[] args) {

        Shape sArr[] = { new Rectangle(30, 40), new Triangle(10, 20) };

        sArr[0].Area();

        Rectangle r = (Rectangle) sArr[0];
        r.diagonal();
        sArr[1].Area();

    }

}

47.	Create a program to demonstrate constructor chaining.
class Abc
{
	Abc()
	{
		System.out.println("No-arg Constructor Abc");
	}
	Abc(int i)
	{
		System.out.println("Parameterized Constructor Abc");
	}
}
class Pqr extends Abc
{
	Pqr()
	{
		
		System.out.println("No-arg Constructor Pqr");
	}
	Pqr(int i)
	{
		System.out.println("Parameterized Constructor Pqr");
	}
}
class MainC
{
	public static void main(String args[])
	{
		Pqr p = new Pqr();
		Pqr P1 = new Pqr(11);
	}
}










------------------------------------------------------------------------------------------------------------------------------------------------------------------------

48.	Create an Abstract class Processor with int member variable data  and method showData to display data value. Create abstract method process() to define processing of member data. Create a class  Factorial using abstract class Processor  to calculate and print factorial of a number by overriding the process method. b. Create a class Circle using abstract class Processor to calculate and print area of a circle by overriding the process method.Ask user to enter choice (factorial or circle area).  Also ask data to work upon. Use Processor class reference to achieve this mechanism.
import java.util.Scanner;
abstract class Processor{
	int data;
	abstract void process();
	void show(){
	System.out.println("Data:"+data);
	}
}
class Factorial extends Processor{
	double fact;
	Factorial(int data){
	this.data=data;
	}
      
	void process(){
	 fact=1;
	//int sum=1;
	while(data>0){
		fact=fact*data;
		--data;
	}
	System.out.println("Factorial of number:"+fact);
	}
}
class Circle extends Processor{
	 float PI=3.14f;
	int radius;
	float area;
	Circle(int radius){
	this.radius=radius;
	}
	void process(){
	area=PI*radius*radius;
	System.out.println("Area Of Circle is:"+area);
	}
}
class Q48{
	public static void main(String args[]){
	
	Scanner sc=new Scanner(System.in);
	int data1;
                     System.out.println("Choose any one:\n1.Factorial\n2.Circle area.");
	int ch=sc.nextInt();
	switch(ch){
	case 1:
	 System.out.println("Enter number to find factorial");
	  data1=sc.nextInt();
	Processor f=new Factorial(data1);
	f.process(); 
	break;
	case 2: 
	 System.out.println("Enter number to find area of circle");
	  data1=sc.nextInt();
	Processor f1=new Circle(data1);
	
	f1.process(); 
	break;
	}
	

	}
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
49.	Create Interface Taxable with members salesTax=7% and incomeTax=10.5%. create abstract method calcTax(). a. Create class Employee(empId,name,salary) and implement Taxable to calculate incomeTax on yearly salary. b. Create class Product(pid,price,quantity) and implement Taxable to calculate salesTax on unit price of product. c. Create class for main method(Say XYZ), accept employee information and a product information from user and print income tax and sales tax respectively.
import java.util.Scanner;
interface Taxable{
	int salesTax=7;
	int incomeTax=10;
	public abstract void calcTax();
}
class Employee implements Taxable{
	int empId;
	String name;
	float salary;
	float calTax;
	 Employee(int empId,String name,float salary){
	this.empId=empId;
	this.name=name;
	this.salary=salary;
	}
	public void calcTax(){
	calTax=(incomeTax*salary)/100;
	System.out.println("Income Tax For The Employee:"+empId+" is:"+calTax);
	}
}
class Product implements Taxable{
	int pId;
	float price;
	int quantity;
	float calTax;
	Product(int pId,float price,int quantity){
	this.pId=pId;
	this.price=price;
	this.quantity=quantity;
	}
	public void calcTax(){
	calTax=(salesTax*price)/100;
	System.out.println("Sales Tax For The Product Id:"+pId+" is:"+calTax);
	}
}
class Q49{
	public static void main(String args[]){
	Scanner sc=new Scanner(System.in);
	int empId;
	String name;
	float salary;
	System.out.println("Enter Employee id, Name, Salary");
	empId=sc.nextInt();
	name=sc.next();
	salary=sc.nextFloat();
	Taxable t=new Employee(empId,name,salary);
	t.calcTax();
                      System.out.println("");
	System.out.println("=============================================");
	System.out.println("");
	int pId;
	float price;
	int quantity;
	System.out.println("Enter PID,Price,Quantity of The Product:");
	pId=sc.nextInt();
	price=sc.nextFloat();
	quantity=sc.nextInt();
	Taxable t1=new Product(pId,price,quantity);
	t1.calcTax();
	}
}



------------------------------------------------------------------------------------------------------------------------------------------------------------------------



50.	Explain the importance of toString() and equals() method of the Object class and override them on class Employee(empId,name,salary).  a. Create class for main method(say XYZ),and accept five employees information and store in an array. Also ensure if entered empId already exist or not (use equals method).  b. Display all employee info using toString method.
--package a1;

import java.util.Scanner;

class Employee{
	int empId;
	String empName;
	Double salary;
	Employee(int empId,String empName,Double salary){
		this.empId=empId;
		this.empName=empName;
		this.salary=salary;
	}
	@Override
	public String toString() {
		return "Employee"+ empId + " empName=" + empName + " salary=" + salary ;
	}
	int getid() {
		return empId;
	}
}
public class Q50 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		Employee arr[]=new Employee[4];
		int count=0;
		outer:
		for(int i=0;i<arr.length;) {
		//outer:
			System.out.println("Enter Employee Id,name, salary");
		int eid=sc.nextInt();
		//sc.Next();
		String name1=sc.next();
		double sal=sc.nextDouble();
			for(int j=0;j<count;j++) {
				int k=arr[j].getid();
		        if(k==eid) {
		        	System.out.println("These Employee id already exist:");
		        	continue outer;
		        }
			}
		Employee e1=new Employee(eid,name1,sal);
		
		arr[i]=e1;
		count++;
		i++;
		}
		for(Employee e: arr) {
			System.out.println(e.toString());
		}
	}

}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

51.	Create a program that helps banks to maintain records. It should have following facilities. o Anybody can create current or saving account with following initial information: account number, name, balance, and branch. o display account detail for a particular accounts. o display total money deposited in bank. o allow deposit and  withdrawal in an account  . o for saving account opening balance and minimum balance must be 5000. o for current account opening balance and minimum balance must be 1000. o can not withdraw the amount from the account that makes balance less than the minimum balance. 
package a2;

//package a1;
import java.util.Scanner;



class Customer{
	double accountNo;
	String Name;
	 double balance;
	Customer(double accountNo,String Name,double balance){
		this.accountNo=accountNo;
		this.Name=Name;
		this.balance=balance;
	}
	@Override
	public String toString() {
		return "Account No " + accountNo + ", Name=" + Name + ", balance=" + balance;
	}
	 double getaccNo() {
		 return accountNo;
	 }
	 double getbal() {
		 return balance;
	 }
	 void setbal(double balance) {
		 this.balance=balance;
	 }
	
}
class savingAcc extends Customer{
	savingAcc(double accountNo,String Name,double balance){
		super(accountNo,Name,balance);
	}
}
class currentAcc extends Customer{
	currentAcc(double accountNo,String Name,double balance){
		super(accountNo,Name,balance);
	}
}
public class Q51 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		Customer c[]= new Customer[2];
		
		int i=0;
		/*for(int i=0;i<c.length;i++) {
		System.out.println("Enter Saving Account details");
		double acc=sc.nextDouble();
		String name=sc.next();
		double bal=sc.nextDouble();
		Customer c1=new savingAcc(acc,name,bal);
		c[i]=c1;
		}
		System.out.println("");
		for(int i=0;i<c2.length;i++) {
			System.out.println("Enter Current Account details");
			double acc=sc.nextDouble();
			String name=sc.next();
			double bal=sc.nextDouble();
			Customer c3=new currentAcc(acc,name,bal);
			c2[i]=c3;
			}
		System.out.println("");
		System.out.println("Saving Account details");
		for(Customer s: c) {
			System.out.println(s.toString());
		}
		System.out.println("");
		System.out.println("Current Account details");
		for(Customer s1: c2) {
			System.out.println(s1.toString());
		}*/
		while(true) {
		System.out.println("Enter Your Choice");
		System.out.println("1.Add Saving Account Details\n2.Add Current Account Details\n"
				+ "3.Enter Amount in Account\n4.withdraw Amount from Account\n5.Display Information Of ACcounts\n6.Display Information Of Particular ACcounts\n7.Exit");
		int ch=sc.nextInt();
		switch(ch) {
		case 1:{
			System.out.println("Enter Saving Account details");
			double acc=sc.nextDouble();
			String name=sc.next();
			double bal=sc.nextDouble();
			//Customer c1=new savingAcc(acc,name,bal);
			//c[i]=c1;
			c[i]=new savingAcc(acc,name,bal);
			i++;}
			break;
		case 2:{
			System.out.println("Enter Current Account details");
			double acc=sc.nextDouble();
			
			String name=sc.next();
			double bal=sc.nextDouble();
			//Customer c3=new currentAcc(acc,name,bal);
			//c[i]=c3;
			c[i]=new currentAcc(acc,name,bal);
			i++;}
			break;
		case 3:	
			System.out.println("Enter Account Number");
			double k2=sc.nextDouble();
			for(Customer cc: c) {
				if(cc.getaccNo()== k2) {
					System.out.println("Enter Amount You Want to deposite");
					double k3=sc.nextDouble();
					double b=cc.getbal()+k3;
					cc.setbal(b);
				}
			}
		case 4:	
			System.out.println("Enter Account Number");
			double k4=sc.nextDouble();
			for(Customer cc: c) {
				if(cc.getaccNo()== k4) {
					System.out.println("Enter Amount You Want to withdraw");
					double k3=sc.nextDouble();
					if(cc instanceof savingAcc) {
					if(cc.getbal()>5000 && cc.getbal()> (5000+k3)) {
					double b=cc.getbal()-k3;
					cc.setbal(b);
					}
					else {
						System.out.println("Minimum Balance Is low.Saving Account Minimum balance should be 5000");
					}}
					else if(cc instanceof currentAcc) {
						if(cc.getbal()>1000 && cc.getbal()> (1000+k3)) {
							double b=cc.getbal()-k3;
							cc.setbal(b);
							}
							else {
								System.out.println("Minimum Balance Is low.Current Account Minimum balance should be 1000");
							}
					}
				}
			}
			break;
		case 5:	
			for(Customer cc:c) {
				if(cc  instanceof savingAcc) {
				System.out.println("Saving Account DEtails");
				System.out.println(cc.toString());
				}
				else if(cc  instanceof currentAcc) {
					System.out.println("Current Account DEtails");
					System.out.println(cc.toString());
				}
			}
			break;
		case 6:System.out.println("Enter Accout number:\n");{
		       double k1=sc.nextDouble();
		       for(Customer cc:c) {
		    	   if(cc.getaccNo()==k1) {
		    		   System.out.println(cc.toString());   
		    	   }
		       }}
			break;
			
		case 7 :return;	
		}
	}

}
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

52.	Input name of a person and count how many vowels it contains.  Use String class functions. 
package a2;
import java.util.Scanner;
public class Q52 {
	public static void main(String args[]) {
	System.out.println("Enter String: ");
	Scanner sc=new Scanner(System.in);
  int count=0;
  String str=sc.nextLine();
  for(int i=0;i<str.length();i++) {
	  if(str.charAt(i)=='a' || str.charAt(i)=='e' || str.charAt(i)=='i' || str.charAt(i)=='o' || str.charAt(i)=='u' ) {
		  count++;
	  }
  }
  System.out.print("Total Number Of vowels is: "+count);
}
}


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
53.	Input data exactly in the following format, and print sum of all integer values. “67, 89, 23, 67, 12, 55, 66”.   (Hint use String class split method and Integer class parseInt method) .
package a2;

public class Q53 {

	public static void main(String[] args) {
		String s[]= {"1","2","3","4","5","6","7"};
		double sum=0;
		for(String ss:s) {
			int a=Integer.parseInt(ss);
			sum+=a;
		}
		System.out.println("Sum of Integers are:"+sum);
	}

}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
54.	Write a program to reverse the given String.
package a2;

public class Q54 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String str="Rohini";
		/*1st methodchar str1[]=str.toCharArray();
		for(int i=str1.length-1;i>=0;i--) {
			System.out.print(str1[i]);
		}*/
		
	/*2nd method	StringBuilder s=new StringBuilder();
		s.append(str);
		s=s.reverse();
		System.out.print(s);*/
	StringBuffer ss=new StringBuffer(str);
	ss.reverse();
	System.out.print(ss);
      
}
}

55.	Write a program to count no of words in the String.
package d1;
import java.util.Scanner;
public class Q55 {
	public static void main(String args[]) {
		Scanner sc=new Scanner(System.in);
  String str1="Rohini Ninawe";
  String str3=sc.nextLine();
  String str2[]=str3.split(" ");
  int i=str2.length;
  System.out.print(i);
}
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

56.	Write a program to convert very first character of every word in uppercase in a String.
package d1
import java.util.Scanner;
public class Q56 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
		StringBuffer s=new StringBuffer();
		char ch=' ';
		String str="rrrr gggg";
		for(int i=0;i<str.length();i++) {
			if(ch==' ' && str.charAt(i)!=' ') 
				s.append(Character.toUpperCase(str.charAt(i)));
		   else
		                s.append(str.charAt(i)); 
				ch=str.charAt(i);
			
		}
		
		System.out.print(s.toString().trim());
	}

}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

57.	Write a program to reverse every word of the String.
package d1;
import java.util.Scanner;
public class Q57 {
	public static void main(String args[]){
	Scanner sc=new Scanner(System.in);
	String str=sc.nextLine();
	String reverceWord="";
	String str1[]=str.split(" ");
	
	for(String ss:str1) {
		StringBuilder ss1=new StringBuilder(ss);
		ss1.reverse();
		reverceWord+=ss1+" ";
	}
	System.out.print(reverceWord);
	
}
}









